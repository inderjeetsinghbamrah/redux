{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment: state => {\n      state.counter += 1;\n    },\n    decrement: state => {\n      state.counter -= 1;\n    },\n    toggleCounter: state => {\n      state.showCounter = !state.showCounter;\n    },\n    increase: (state, action) => {\n      state.counter += action.amount;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["/home/inder/redux/src/store/index.js"],"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","toggleCounter","increase","action","amount","store","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BJ,EAAAA,YAF+B;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAGC,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACN,OAAN,IAAiB,CAAjB;AACD,KAHO;AAIRO,IAAAA,SAAS,EAAGD,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACN,OAAN,IAAiB,CAAjB;AACD,KANO;AAORQ,IAAAA,aAAa,EAAGF,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACD,KATO;AAURQ,IAAAA,QAAQ,EAAE,CAACH,KAAD,EAAQI,MAAR,KAAmB;AAC3BJ,MAAAA,KAAK,CAACN,OAAN,IAAiBU,MAAM,CAACC,MAAxB;AACD;AAZO;AAHqB,CAAD,CAAhC;AAmBA,MAAMC,KAAK,GAAGd,cAAc,CAAC;AAC3Be,EAAAA,OAAO,EAAE;AACPb,IAAAA,OAAO,EAAEE,YAAY,CAACW;AADf;AADkB,CAAD,CAA5B;AAMA,eAAeD,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialState = { counter: 0, showCounter: true };\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.counter += 1;\n    },\n    decrement: (state) => {\n      state.counter -= 1;\n    },\n    toggleCounter: (state) => {\n      state.showCounter = !state.showCounter;\n    },\n    increase: (state, action) => {\n      state.counter += action.amount;\n    },\n  },\n});\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n  },\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}