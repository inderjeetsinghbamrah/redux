{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment: state => {\n      state.counter += 1;\n    },\n    decrement: state => {\n      state.counter -= 1;\n    },\n    toggleCounter: state => {\n      state.showCounter = !state.showCounter;\n    },\n    increase: (state, action) => {\n      state.counter += action.amount;\n    }\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        counter: state.counter + 1,\n        showCounter: state.showCounter\n      };\n\n    case \"DECREMENT\":\n      return {\n        counter: state.counter - 1,\n        showCounter: state.showCounter\n      };\n\n    case \"INCREASE\":\n      return {\n        counter: state.counter + action.amount,\n        showCounter: state.showCounter\n      };\n\n    case \"TOGGLE_COUNTER\":\n      return {\n        showCounter: !state.showCounter,\n        counter: state.counter\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/home/inder/redux/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","toggleCounter","increase","action","amount","counterReducer","type","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAEAH,WAAW,CAAC;AACVI,EAAAA,IAAI,EAAE,SADI;AAEVH,EAAAA,YAFU;AAGVI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAGC,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACL,OAAN,IAAiB,CAAjB;AACD,KAHO;AAIRM,IAAAA,SAAS,EAAGD,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACL,OAAN,IAAiB,CAAjB;AACD,KANO;AAORO,IAAAA,aAAa,EAAGF,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACJ,WAAN,GAAoB,CAACI,KAAK,CAACJ,WAA3B;AACD,KATO;AAURO,IAAAA,QAAQ,EAAE,CAACH,KAAD,EAAQI,MAAR,KAAmB;AAC3BJ,MAAAA,KAAK,CAACL,OAAN,IAAiBS,MAAM,CAACC,MAAxB;AACD;AAZO;AAHA,CAAD,CAAX;;AAmBA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCN,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXU,MAAW;;AACvD,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AAAEZ,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CAA3B;AAA8BC,QAAAA,WAAW,EAAEI,KAAK,CAACJ;AAAjD,OAAP;;AACF,SAAK,WAAL;AACE,aAAO;AAAED,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CAA3B;AAA8BC,QAAAA,WAAW,EAAEI,KAAK,CAACJ;AAAjD,OAAP;;AACF,SAAK,UAAL;AACE,aAAO;AACLD,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBS,MAAM,CAACC,MAD3B;AAELT,QAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFd,OAAP;;AAIF,SAAK,gBAAL;AACE,aAAO;AACLA,QAAAA,WAAW,EAAE,CAACI,KAAK,CAACJ,WADf;AAELD,QAAAA,OAAO,EAAEK,KAAK,CAACL;AAFV,OAAP;;AAKF;AACE,aAAOK,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,MAAMQ,KAAK,GAAGhB,WAAW,CAACc,cAAD,CAAzB;AAEA,eAAeE,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { counter: 0, showCounter: true };\n\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.counter += 1;\n    },\n    decrement: (state) => {\n      state.counter -= 1;\n    },\n    toggleCounter: (state) => {\n      state.showCounter = !state.showCounter;\n    },\n    increase: (state, action) => {\n      state.counter += action.amount;\n    },\n  },\n});\n\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return { counter: state.counter + 1, showCounter: state.showCounter };\n    case \"DECREMENT\":\n      return { counter: state.counter - 1, showCounter: state.showCounter };\n    case \"INCREASE\":\n      return {\n        counter: state.counter + action.amount,\n        showCounter: state.showCounter,\n      };\n    case \"TOGGLE_COUNTER\":\n      return {\n        showCounter: !state.showCounter,\n        counter: state.counter,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}